                            Rock Paper Scissor Game

1. Introduction
    After the word guessing game, the rock-paper-scissors game I played a lot 
with my childhood friends. I'm sure everyone is familiar with the gameplay, so I
won't write it here (In case you need it, read the summary in the gameplay.txt).
Since finding the winner by bo1 (best of 1) is so fast, I decided to bo3 to make
the game more interesting. It also makes programming this game a bit complicated.

2. Program Description:
* Programming paradigm: Modular programming
* Standard modules: os, random, time
* Custom modules: file_reader, utilites, etc.
* Program Flow Control:
- Main flow:
    Greeting and show game_play to player:
    Send the player an invitation:
    If player agree:
        Start new match:
            1. Start 2 sets:
                -> keep tracking win, lose and tie sets.
            2. If winner found after 2 sets:
                -> Show match result and end match.
               If not: start the third.
                -> Judging based on the final set results to find out the winner.
                -> Display message congratulating the winner.
    If player disagree:
        Display Goodbye message.

- Functional requirements:
1. A welcome screen to interact with users when they start the program.
2. A playground where users can enjoy the game.
3. The system must allow the user to exit the game.

- Technical specification:
<?> Get computer random choices by random module.
    The random module implements pseudo-random number generators. It's called 
pseudo-random since the numbers were generated by an algorithm, in other words, 
the number generated will depend on rules. Moreover, the rules are affected by 
the random.seed() method which is provided in the random module.and by default,
the current system time is used as the seed. The same seed will produce the same
number. If the player enters choices too fast, the computer will not change the 
choice.To make it harder to predict I have combined delay, generate a seed, and 
shuffle. The small delay will lead to generating a seed more likely to be random
and after that shuffle the choice list. Then the computer's selections will look
more random.

- Testing:
1. Check Welcome screen:
- Players launch the program, the gameplay will appear first and show the invite
message.
- Display error warnings and help messages if the gameplay has problems loading.
- Players enter y: start a new match.
- Players enter n: show a goodbye message and terminate the program.
- Players enter gameplay: show the gameplay (backup).
- Players enter other letters: show a warning message and let them re-enter.

2. Check game processing:
- The player entered letters like s, r, and p must convert to scissors, rock, 
and paper, respectively. 
- The player enters other letters that are not s, r, and p. Display the error 
message and let them re-enter. 
- After the first two sets of the current match, if a winner is found, the third
set will not be played and do otherwise.
- The set and match judging must satisfy the game rule. 